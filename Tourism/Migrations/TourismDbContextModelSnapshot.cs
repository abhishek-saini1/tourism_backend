// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tourism.Models;

#nullable disable

namespace Tourism.Migrations
{
    [DbContext(typeof(TourismDbContext))]
    partial class TourismDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tourism.Models.Admin", b =>
                {
                    b.Property<int>("AId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AId"));

                    b.Property<string>("AEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("APassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AUserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AId");

                    b.ToTable("admins");
                });

            modelBuilder.Entity("Tourism.Models.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Phone")
                        .HasColumnType("float");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("agents");
                });

            modelBuilder.Entity("Tourism.Models.BookingTrip", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<string>("Accommodation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfTravelers")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TravelerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.Property<int?>("TripsTId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("TripsTId");

                    b.ToTable("bookings");
                });

            modelBuilder.Entity("Tourism.Models.FeedBack", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<string>("FeedBackTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TravelerID")
                        .HasColumnType("int");

                    b.HasKey("FId");

                    b.HasIndex("TravelerID");

                    b.ToTable("feedbacks");
                });

            modelBuilder.Entity("Tourism.Models.Gallery", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<byte[]>("ImageData")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("gallery");
                });

            modelBuilder.Entity("Tourism.Models.Traveler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BookingTripBookingId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Phone")
                        .HasColumnType("float");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookingTripBookingId");

                    b.ToTable("travelers");
                });

            modelBuilder.Entity("Tourism.Models.Trips", b =>
                {
                    b.Property<int>("TId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TId"));

                    b.Property<int?>("AgentId")
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodAndAccommodation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Itinerary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RatesPerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RatesPerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RatesPerTourPack")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TDetails")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TId");

                    b.HasIndex("AgentId");

                    b.ToTable("trips");
                });

            modelBuilder.Entity("Tourism.Models.BookingTrip", b =>
                {
                    b.HasOne("Tourism.Models.Trips", null)
                        .WithMany("Trip")
                        .HasForeignKey("TripsTId");
                });

            modelBuilder.Entity("Tourism.Models.FeedBack", b =>
                {
                    b.HasOne("Tourism.Models.Traveler", null)
                        .WithMany("FeedBacks")
                        .HasForeignKey("TravelerID");
                });

            modelBuilder.Entity("Tourism.Models.Traveler", b =>
                {
                    b.HasOne("Tourism.Models.BookingTrip", null)
                        .WithMany("Travelers")
                        .HasForeignKey("BookingTripBookingId");
                });

            modelBuilder.Entity("Tourism.Models.Trips", b =>
                {
                    b.HasOne("Tourism.Models.Agent", null)
                        .WithMany("trips")
                        .HasForeignKey("AgentId");
                });

            modelBuilder.Entity("Tourism.Models.Agent", b =>
                {
                    b.Navigation("trips");
                });

            modelBuilder.Entity("Tourism.Models.BookingTrip", b =>
                {
                    b.Navigation("Travelers");
                });

            modelBuilder.Entity("Tourism.Models.Traveler", b =>
                {
                    b.Navigation("FeedBacks");
                });

            modelBuilder.Entity("Tourism.Models.Trips", b =>
                {
                    b.Navigation("Trip");
                });
#pragma warning restore 612, 618
        }
    }
}
